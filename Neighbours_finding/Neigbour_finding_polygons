#In order to calculate neigbours for each cell we used our mesurements from Imaris segmentation. We got X,Y,Z coordinates for each cell as well as for membranes spots. 
These mesurements were then imported into R and processed as detaled bellow #

> library("sf")
> df_80k <- read.csv('80K_Spots.csv')
> colnames(df_80k) <- c("Cell_ID", "Spot_ID", "X", "Y", "Z")
> head(df_80k)

  Cell_ID   Spot_ID       X       Y         Z
1       0 600000000 193.722 175.733 0.0998975
2       0 600000001 192.895 176.727 0.0998975
3       0 600000002 193.828 177.462 0.0998975
4       8 600000003 178.173 178.220 0.0998975
5       7 600000004 187.065 178.285 0.0998975
6       0 600000005 190.754 178.186 0.0998975


> df_80k_sf <- st_as_sf(df_80k,
                      coords = c('X', 'Y', 'Z')) %>%
    group_by(Cell_ID) %>%
    summarise() %>%
    ungroup() %>%  # Just in case
    st_convex_hull()
    
    
> plot(df_80k_sf, col = sf.colors(categorical = TRUE, alpha = .5), main = "80K 0exp")


### A plot like the one showed in Figure # Appears##

#Expand all polygons of 0.6um
> df_80k_0.6_sf <- st_as_sf(df_80k,
                   coords = c('X', 'Y', 'Z')) %>%
    group_by(Cell_ID) %>%
    summarise() %>%
    ungroup() %>%  # Just in case
    st_convex_hull() %>%
    st_buffer(0.6)

#Find intersection
> a_80k_0.6 = st_set_geometry(st_intersection(df_80k_0.6_sf,df_80k_0.6_sf), NULL)

> head(a_80k_0.6)

# A tibble: 6 x 2
  Cell_ID Cell_ID.1
    <int>     <int>
1       0         0
2       7         0
3      10         0
4      51         0
5      62         0
6       1         1

#Remove self interactions (when ID and neigh are the same)
> a2_80k_0.6 <- subset(a_80k_0.6, Cell_ID != Cell_ID.1)

# A tibble: 6 x 2
  Cell_ID Cell_ID.1
    <int>     <int>
1       7         0
2      10         0
3      51         0
4      62         0
5       4         1
6       5         1

#Reshape for final table
> results_80k_0.6 = a2_80k_0.6%>% 
    mutate(rn = rowid(Cell_ID)) %>%
    pivot_wider(names_from = rn, values_from = Cell_ID.1)


> head(results_80k_0.6)

# A tibble: 6 x 9
  Cell_ID   `1`   `2`   `3`   `4`   `5`   `6`   `7`   `8`
    <int> <int> <int> <int> <int> <int> <int> <int> <int>
1       7     0     9    10    NA    NA    NA    NA    NA
2      10     0     1     4     5     7     9    62    NA
3      51     0    55    62    NA    NA    NA    NA    NA
4      62     0     1    10    51    55    71    79    NA
5       4     1     5     9    10    15   244   246    NA
6       5     1     4    10    79   246   510    NA    NA

#Write results
> write.csv(results_80k_0.6, 2020.11.16_results_polygons_80k_exp_0.6.csv, na="", row.names=FALSE)


