> library('reshape')
> library('tidyverse')

> df <- read.csv("Cell_Positions.csv")
> rownames(df) <- df[,1]
> df=df[,-1]

> head(df)
  Cell.Position.X Cell.Position.Y Cell.Position.Z
0         194.856         178.306         4.87618
1         196.222         188.934         4.70236
2         156.695         193.631         4.76135
3         169.690         196.130         4.84312
4         188.193         192.427         4.54085
5         193.830         194.127         4.89521


#calculate euclidian distance
> df1 = dist(df)

#Convert to df
> df1_dist_m <- melt(as.matrix(df1), varnames = c("ID", "neig"))

#Filter for distance smaller than 8 (radius,this can be adjusted to any specific value the use wants)
> df2 <- df1_dist_m %>% subset(value < 8)
> head(df2)

     ID neig    value
1     0    0 0.000000
8     7    0 6.890674
11   10    0 7.961700
49   51    0 6.468541
60   62    0 7.489237
1984  1    1 0.000000


#subset df2 to have only IDs and neighbours
> df3 = df2[,c(1,2)]
> head(df3)
     ID neig
1     0    0
8     7    0
11   10    0
49   51    0
60   62    0
1984  1    1

> dim(df3) 
[1] 13270     2

#Remove self interactions (when ID and neigh are the same)
> df4 <-  subset(df3, ID != neig)
> dim(df4) 
[1] 11288     2


> library(dplyr) 
> library(tidyr) 
> library(data.table)  
#Expand
results <-  df4 %>%  mutate(rm=rowid(ID)) %>%      pivot_wider(names_from = rm, values_from = neig) 

> head(results)
# A tibble: 6 x 9
     ID   `1`   `2`   `3`   `4`   `5`   `6`   `7`   `8`
  <int> <int> <int> <int> <int> <int> <int> <int> <int>
1     7     0     9    10    NA    NA    NA    NA    NA
2    10     0     1     4     7     9    NA    NA    NA
3    51     0    55    62    NA    NA    NA    NA    NA
4    62     0     1    51    55    71    79    NA    NA
5     5     1     4   246   510    NA    NA    NA    NA
6    79     1    62    71    84   509   510    NA    NA
 
> write.csv(results, "2020.11.16_results_eucledian_distance_center_points.csv")
